ยง `Algebraic data types`

DECLARE List OF a
  IS ONE OF
    Nil
    Cons HAS
      head IS AN a
      tail IS A List OF a

DECLARE Tree a
  IS ONE OF
    Leaf HAS value IS AN a
    Node HAS left IS A Tree a
             right IS A Tree a

DECLARE Choice OF a AND b
  IS ONE OF
    Left  HAS payload IS AN a
    Right HAS payload IS A  b

DECLARE OPTIONAL a
  IS ONE OF
    Missing
    Just HAS payload IS AN a

GIVEN  a      IS A TYPE
       b      IS A TYPE
       f      IS A FUNCTION FROM a TO b
       list   IS A List OF a
GIVETH A List OF b
map f list MEANS
  CONSIDER list
    WHEN Nil       THEN Nil
    WHEN Cons x xs THEN Cons OF f x AND map f xs

-- preliminary experiment with built-in list syntax
GIVEN  a      IS A TYPE
       b      IS A TYPE
       f      IS A FUNCTION FROM a TO b
       list   IS A List2 OF a
GIVETH A List2 OF b
map2 f list MEANS
  CONSIDER list
    WHEN EMPTY            THEN EMPTY
    WHEN x FOLLOWED BY xs THEN f x FOLLOWED BY map f xs

GIVEN  a      IS A TYPE
       b      IS A TYPE
       c      IS A TYPE
       left   IS A FUNCTION FROM a TO c
       right  IS A FUNCTION FROM b TO c
       choice IS A Choice OF a AND b
GIVETH A c
choose left right choice MEANS
  CONSIDER choice
    WHEN Left  a THEN left a
    WHEN Right b THEN right b

GIVEN a IS A TYPE
      default IS AN a
      o IS AN OPTIONAL a
GIVETH AN a
fromOptional default o MEANS
  CONSIDER o
    WHEN Missing THEN default
    WHEN Just a  THEN a
